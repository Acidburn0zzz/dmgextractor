DMGExtractor changelog
----------------------

0.70 (build 437)
----------------
- Support for AES-128 encrypted .dmg images added after studying VileFault
  ( http://crypto.nsa.org/vilefault/ ).
- Program now suggests a sensible default output file.
- User interaction slightly overhauled when restructuring the program. Should be more
  informative and practical in many cases.
- Program now accepts raw .dmg files, though a warning is issued telling the user that
  essentially the program will only copy the file contents from one location to another.
- Developers: The package org.catacombae.udif moved to org.catacombae.dmg.udif, and a new
  package called org.catacombae.dmg.encrypted was created where the implementation of the
  CEncryptedEncoding layer resides. Developers can easily read encrypted .dmg format files
  with the class:
    org.catacombae.dmg.encrypted.ReadableCEncryptedEncodingStream

0.60 (build 386)
----------------
- Upgraded license to GPL version 3 in order to use the Apache bzip2 code which is released
  under the Apache Software License Version 2.0, incompatible with GPLv2, but compatible
  with GPLv3.
- Support for bzip2-compressed images (type UDBZ) through the Apache Ant bzip2 library.
- APX XML parser overhaul, reducing memory footprint and working with streams/readers
  instead of arrays when getting results from the parser. This should result in an ability
  to extract larger DMG files.
- Made DMGExtractor startable through Java Web Start.
- Restructured the app, separating the application and the library part. For developers
  that wish to process UDIF disk images there are two simple classes that you should take a
  look at:
    org.catacombae.udif.UDIFRandomAccessStream (for random read access to UDIF disk images)
    org.catacombae.udif.UDIFInputStream (for just reading the contents sequentially)

0.51pre1 (build 226)
--------------------
- Switched XML-parser to a homebrew parser after getting frustrated with not being able
  to turn off the SAX parser's inability to work in offline conditions, just because it
  needed to contact www.apple.com every single time to get a DTD.
  If my own XML parser bugs out, you can always supply the switch -saxparser to the command
  line to use the SAX parser.
- Worked further on compatibility issues... discovered a new block type which supposedly
  also means zero fill... at least in the cases I tested. The new version should be more
  compatible than the previous (I have no DMG images in my possession that it should handle
  and yet doesn't).
- Code cleanup started, but needs more work. It's a mess...

0.5 (build 48)
--------------
- First release
